package com.example.DemoTestBot.database;import com.example.DemoTestBot.Const;import java.sql.*;public class MyJDBC {    // register new user to the database    // true - register success    // false - register failure    public static boolean register(String username, String password, String telNum){        try {            //first check of the username already exists in the database            if (!checkUser(username)) {                //connect to database                Connection connection = DriverManager.getConnection(Const.DB_URL, Const.DB_USERNAME, Const.DB_PASSWORD);                // create insert query                PreparedStatement insertUser = connection.prepareStatement("INSERT INTO " + Const.DB_USERS_TABLE_NAME + "(username, password, telnum)" + "VALUES (?, ?, ?)");                // insert parameters in the insert query                insertUser.setString(1, username);                insertUser.setString(2, password);                insertUser.setString(3, telNum);                // update db with new user                insertUser.executeUpdate();                return true;            }        }catch(SQLException e){            e.printStackTrace();        }        return true;    }    public static boolean register(String username, String password, String telNum, String email){        try {            //first check of the username already exists in the database            if (!checkUser(username)) {                //connect to database                Connection connection = DriverManager.getConnection(Const.DB_URL, Const.DB_USERNAME, Const.DB_PASSWORD);                // create insert query                PreparedStatement insertUser = connection.prepareStatement("INSERT INTO " + Const.DB_USERS_TABLE_NAME + "(username, password, telnum, email)" + "VALUES (?, ?, ?, ?)");                // insert parameters in the insert query                insertUser.setString(1, username);                insertUser.setString(2, password);                insertUser.setString(3, telNum);                insertUser.setString(4, email);                // update db with new user                insertUser.executeUpdate();                return true;            }        }catch(SQLException e){            e.printStackTrace();        }        return true;    }    //check if username already exists in the database    // true - user exists in the databse    // false - user doesn`t exists    public static boolean checkUser(String username){        try{            Connection connection = DriverManager.getConnection(Const.DB_URL, Const.DB_USERNAME, Const.DB_PASSWORD);            PreparedStatement checkUserExists = connection.prepareStatement("select * from " + Const.DB_USERS_TABLE_NAME + " where username = ? ");            checkUserExists.setString(1, username);            ResultSet resultSet = checkUserExists.executeQuery();            if(!resultSet.isBeforeFirst()){                return false;            }        }catch(SQLException e){            e.printStackTrace();        }        return true;    }    public static boolean checkUser(String username, String telNum){        try{            Connection connection = DriverManager.getConnection(Const.DB_URL, Const.DB_USERNAME, Const.DB_PASSWORD);            PreparedStatement checkTelNumExists = connection.prepareStatement("SELECT * FROM" + Const.DB_USERS_TABLE_NAME + " WHERE TELNUM = ?");            checkTelNumExists.setString(1,telNum);            ResultSet resultSet = checkTelNumExists.executeQuery();            if(!resultSet.isBeforeFirst()){                return false;            }        }catch(SQLException e){            e.printStackTrace();        }        return true;    }    // validate login credentials by checking to see if username/password pair exists in the db    public static boolean validateLogin(String username, String password){        try{            Connection connection = DriverManager.getConnection(Const.DB_URL, Const.DB_USERNAME, Const.DB_PASSWORD);            // create select query            PreparedStatement validateUser = connection.prepareStatement("SELECT * FROM " + Const.DB_USERS_TABLE_NAME + " WHERE USERNAME = ? AND PASSWORD = ?");            validateUser.setString(1,username);            validateUser.setString(2,password);            ResultSet resultSet = validateUser.executeQuery();            if(!resultSet.isBeforeFirst()){                return false;            }        }catch(SQLException e){            e.printStackTrace();        }        return true;    }    public static boolean addMachine(String type, String brand, String model, String engine, int hp){        try {            //first check of the username already exists in the database            if (!checkMachine(brand, model)) {                //connect to database                Connection connection = DriverManager.getConnection(Const.DB_URL, Const.DB_USERNAME, Const.DB_PASSWORD);                // create insert query                PreparedStatement insertMachine = connection.prepareStatement("INSERT INTO " + Const.DB_MACHINERY_TABLE_NAME + "(type, brand, model, engine, hp)" + "VALUES (?, ?, ?, ?, ?)");                // insert parameters in the insert query                insertMachine.setString(1, type);                insertMachine.setString(2, brand);                insertMachine.setString(3, model);                insertMachine.setString(4, engine);                insertMachine.setInt(5, hp);                // update db with new user                insertMachine.executeUpdate();                return true;            }        }catch(SQLException e){            e.printStackTrace();        }        return true;    }    public static boolean checkMachine(String brand, String model){        try{            Connection connection = DriverManager.getConnection(Const.DB_URL, Const.DB_USERNAME, Const.DB_PASSWORD);            // create select query            PreparedStatement validateUser = connection.prepareStatement("SELECT * FROM " + Const.DB_MACHINERY_TABLE_NAME + " WHERE brand = ? AND model = ?");            validateUser.setString(1,brand);            validateUser.setString(2,model);            ResultSet resultSet = validateUser.executeQuery();            if(!resultSet.isBeforeFirst()){                return false;            }        }catch(SQLException e){            e.printStackTrace();        }        return true;    }}